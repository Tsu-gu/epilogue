services:
  backend:
    image: epilogue-backend
    container_name: epilogue-backend-prod
    build:
      dockerfile: ./backend/Dockerfile
      context: .
      args:
        UNAME: ${UNAME}
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@epilogue-db-prod/${POSTGRES_DB}
      - MODE=${MODE}
      - ADMIN_USER=${ADMIN_USER}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}

  frontend:
    image: epilogue-frontend
    build:
      dockerfile: ./frontend/Dockerfile
      context: .
    container_name: epilogue-frontend-prod
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - 8080:80
      - 8443:443

  db:
    image: docker.io/postgres:alpine
    container_name: epilogue-db-prod
    restart: unless-stopped
    volumes:
      - db:/var/lib/postgresql/data:Z
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U${POSTGRES_USER}"]
      interval: 10m
      start_period: 10s
      start_interval: 3s

volumes:
  db:
    name: epilogue-db-prod
